<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">
	<insert id="write" parameterType="noticeVO">
		<selectKey keyProperty="no" resultType="int" order="BEFORE">
			select kangbank_notice_seq.nextval from dual
		</selectKey>
		insert into kangbank_notice(no,title,content,timePosted,email,tel)
		values(#{no},#{title},#{content},sysdate,#{customerVO.email},#{customerVO.tel})
	</insert>
	
	<select id="totalContent" resultType="int">
		select count(*) from kangbank_notice
	</select>
	<resultMap type="noticeVO" id="noticeRM">
		<result property="customerVO.email" column="email" />	
		<result property ="customerVO.name" column="name" />
	</resultMap>
	<select id="getNoticeList" resultMap="noticeRM" parameterType="map">
      select b.no,b.title,b.timePosted,b.hits,b.email,m.name 
      	from (
      select no,title,timePosted,hits,ceil(rownum/#{numberOfContent}) as page,email from (
      select no,title,to_char(timePosted,'YYYY.MM.DD') as timePosted,
         hits,email from kangbank_notice  order by no desc
       )) b,kangbank_customer m  where b.email=m.email and page=#{pageNo} order by no desc
   </select>
	<select id="showContent" resultMap="noticeRM">
		select b.no,b.title,to_char(b.timePosted,'YYYY.MM.DD HH:mm:ss') as timePosted,b.content,
		b.hits,m.email,m.name from kangbank_notice b,kangbank_customer m where
		b.email=m.email and no=#{value}
	</select>
	<update id="updateCount" parameterType="int">
		update kangbank_notice set hits=hits+1 where no=#{no}
	</update>
	<delete id="deleteNotice">
		delete from kangbank_notice where no=#{value}
	</delete>
	<update id="updateNotice" parameterType="noticeVO">
		update kangbank_notice set 
		title=#{title}, content=#{content}
		where no=#{no}
	</update>

       	
</mapper>