<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="loan">
	<!-- 대출 계좌 이름 리스트 -->
	<select id="loanNameList" resultType="String">
		select accountName from kangbank_account_type where accountType='대출'
	</select>
	<!-- 대출 계좌 전체 리스트 -->
	<select id="loanList" resultType="loanAccountVO">
		select C.AccountName, C.accountExplanation, C.maximumMoney, C.rates, C.term, D.additionalRates
		from (select A.accountName, A.accountExplanation, A.maximumMoney, B.rates, B.term, B.accountSeq
			from (select accountName, accountExplanation, minMoney as maximumMoney 
				from kangbank_account_type 
				where accountType='대출') A, kangbank_account_rates B
			where A.accountName = B.accountName) C, kangbank_loan_rates D
		where C.accountSeq = D.accountSeq and C.accountName=#{value}
	</select>
	<!-- 선택한 대출 상품 정보 -->
	<select id="loanData" resultType="loanAccountVO">
		select a.accountName, a.accountType, a.accountExplanation,a.minMoney as maximumMoney, b.rates, b.term, b.ratesMonth
		from KANGBANK_ACCOUNT_TYPE a, kangbank_account_rates b
		where a.accountName=b.accountName and a.accountName=#{value}
	</select>
	<!-- balanceSum 매달 업데이트 -->
	<update id="balanceSumUpdate">
		update kangbank_account K
		set balanceSum=(balanceSum + 
		                		DECODE(K.dateCount,
		                		       0,
										(select ROUND((K.balance*E.rates)/1200*(1+E.additionalRates/1200)) as money
										from (select D.additionalRates, C.accountName, C.rates
										      from (select B.accountSeq, A.accountName, B.rates
											        from (select accountName from kangbank_account_Type where accountType='대출') A,
											              kangbank_account_rates B
										            where A.accountName=B.accountName) C,
										            kangbank_loan_rates D
										      where C.accountSeq=D.accountSeq) E
										where E.accountName=K.accountName)
										,
										(select (K.balance*C.rates/1200) as money
						                from (select A.accountName, B.rates
							                  from (select accountName from kangbank_account_Type where accountType='대출') A,
							  	                    kangbank_account_rates B
							                  where A.accountName=B.accountName) C
						                where C.accountName=K.accountName)
										)
		                )
		where (select accountType from kangbank_account_type where accountName = K.accountName) = '대출'
	</update>
</mapper>